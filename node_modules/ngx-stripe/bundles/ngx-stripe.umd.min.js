!function(global,factory){"object"==typeof exports&&"undefined"!=typeof module?factory(exports,require("@angular/core"),require("@angular/common"),require("rxjs/BehaviorSubject"),require("rxjs/Observable"),require("rxjs/add/observable/combineLatest"),require("rxjs/add/observable/fromPromise"),require("rxjs/add/observable/of"),require("rxjs/add/operator/switchMap"),require("rxjs/add/operator/filter"),require("rxjs/add/operator/first"),require("rxjs/add/operator/map")):"function"==typeof define&&define.amd?define("ngx-stripe",["exports","@angular/core","@angular/common","rxjs/BehaviorSubject","rxjs/Observable","rxjs/add/observable/combineLatest","rxjs/add/observable/fromPromise","rxjs/add/observable/of","rxjs/add/operator/switchMap","rxjs/add/operator/filter","rxjs/add/operator/first","rxjs/add/operator/map"],factory):factory((global.ng=global.ng||{},global.ng.stripe={}),global.ng.core,global.ng.common,global.Rx,global.Rx)}(this,function(exports,core,common,BehaviorSubject,Observable){"use strict";function isSourceData(sourceData){return"type"in sourceData}function isBankAccount(account){return"bank_account"===account}function isBankAccountData(bankAccountData){return"country"in bankAccountData&&"currency"in bankAccountData&&"routing_number"in bankAccountData&&"account_number"in bankAccountData&&"account_holder_name"in bankAccountData&&"account_holder_type"in bankAccountData&&("individual"===bankAccountData.account_holder_type||"company"===bankAccountData.account_holder_type)}function isPii(pii){return"pii"===pii}function isPiiData(piiData){return"personal_id_number"in piiData}var __assign=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++){s=arguments[i];for(var p in s)Object.prototype.hasOwnProperty.call(s,p)&&(t[p]=s[p])}return t},WindowRef=function(){function WindowRef(platformId){this.platformId=platformId}return WindowRef.prototype.getNativeWindow=function(){return common.isPlatformBrowser(this.platformId)?window:{}},WindowRef.decorators=[{type:core.Injectable}],WindowRef.ctorParameters=function(){return[{type:void 0,decorators:[{type:core.Inject,args:[core.PLATFORM_ID]}]}]},WindowRef}(),DocumentRef=function(){function DocumentRef(platformId){this.platformId=platformId}return DocumentRef.prototype.getNativeDocument=function(){return common.isPlatformBrowser(this.platformId)?document:{}},DocumentRef.decorators=[{type:core.Injectable}],DocumentRef.ctorParameters=function(){return[{type:void 0,decorators:[{type:core.Inject,args:[core.PLATFORM_ID]}]}]},DocumentRef}(),LazyStripeAPILoader=function(){function LazyStripeAPILoader(platformId,window,document){this.platformId=platformId,this.window=window,this.document=document,this.status=new BehaviorSubject.BehaviorSubject({error:!1,loaded:!1,loading:!1})}return LazyStripeAPILoader.prototype.asStream=function(){return this.load(),this.status.asObservable()},LazyStripeAPILoader.prototype.isReady=function(){return this.status.getValue().loaded},LazyStripeAPILoader.prototype.load=function(){var _this=this;if(!common.isPlatformServer(this.platformId)){var status=this.status.getValue();if(this.window.getNativeWindow().hasOwnProperty("Stripe"))this.status.next({error:!1,loaded:!0,loading:!1});else if(!status.loaded&&!status.loading){this.status.next(__assign({},status,{loading:!0}));var script=this.document.getNativeDocument().createElement("script");script.type="text/javascript",script.async=!0,script.defer=!0,script.src="https://js.stripe.com/v3/",script.onload=function(){_this.status.next({error:!1,loaded:!0,loading:!1})},script.onerror=function(){_this.status.next({error:!0,loaded:!1,loading:!1})},this.document.getNativeDocument().body.appendChild(script)}}},LazyStripeAPILoader.decorators=[{type:core.Injectable}],LazyStripeAPILoader.ctorParameters=function(){return[{type:void 0,decorators:[{type:core.Inject,args:[core.PLATFORM_ID]}]},{type:WindowRef},{type:DocumentRef}]},LazyStripeAPILoader}(),STRIPE_PUBLISHABLE_KEY=new core.InjectionToken("Stripe Publishable Key"),STRIPE_OPTIONS=new core.InjectionToken("Stripe Options"),StripeInstance=function(){function StripeInstance(loader,window,key,options){var _this=this;this.loader=loader,this.window=window,this.key=key,this.options=options,this.stripe$=new BehaviorSubject.BehaviorSubject(void 0),this.loader.asStream().filter(function(status){return!0===status.loaded}).first().map(function(){return _this.window.getNativeWindow().Stripe}).subscribe(function(Stripe){var stripe=_this.options?Stripe(_this.key,_this.options):Stripe(_this.key);_this.stripe$.next(stripe)})}return StripeInstance.prototype.getInstance=function(){return this.stripe$.getValue()},StripeInstance.prototype.elements=function(options){return this.stripe$.asObservable().filter(function(stripe){return Boolean(stripe)}).map(function(stripe){return stripe.elements(options)}).first()},StripeInstance.prototype.createToken=function(a,b){return this.stripe$.asObservable().filter(function(stripe){return Boolean(stripe)}).switchMap(function(s){var stripe=s;return isBankAccount(a)&&isBankAccountData(b)?Observable.Observable.fromPromise(stripe.createToken(a,b)):(isPii(a)&&isPiiData(b),Observable.Observable.fromPromise(stripe.createToken(a,b)))}).first()},StripeInstance.prototype.createSource=function(a,b){return this.stripe$.asObservable().filter(function(stripe){return Boolean(stripe)}).switchMap(function(s){var stripe=s;return isSourceData(a)?Observable.Observable.fromPromise(stripe.createSource(a)):Observable.Observable.fromPromise(stripe.createSource(a,b))}).first()},StripeInstance.prototype.retrieveSource=function(source){return this.stripe$.asObservable().filter(function(stripe){return Boolean(stripe)}).switchMap(function(s){var stripe=s;return Observable.Observable.fromPromise(stripe.retrieveSource(source))}).first()},StripeInstance.prototype.paymentRequest=function(options){var stripe=this.getInstance();if(stripe)return stripe.paymentRequest(options)},StripeInstance}(),StripeService=function(){function StripeService(key,options,loader,window){this.key=key,this.options=options,this.loader=loader,this.window=window,key&&(this.stripe=new StripeInstance(this.loader,this.window,key,options))}return StripeService.prototype.getStripeReference=function(){var _this=this;return this.loader.asStream().filter(function(status){return!0===status.loaded}).map(function(){return _this.window.getNativeWindow().Stripe})},StripeService.prototype.getInstance=function(){return this.stripe.getInstance()},StripeService.prototype.setKey=function(key,options){return this.changeKey(key,options)},StripeService.prototype.changeKey=function(key,options){return this.stripe=new StripeInstance(this.loader,this.window,key,options),this.stripe},StripeService.prototype.elements=function(options){return this.stripe.elements(options)},StripeService.prototype.createToken=function(a,b){return this.stripe.createToken(a,b)},StripeService.prototype.createSource=function(a,b){return this.stripe.createSource(a,b)},StripeService.prototype.retrieveSource=function(source){return this.stripe.retrieveSource(source)},StripeService.prototype.paymentRequest=function(options){return this.stripe.paymentRequest(options)},StripeService.decorators=[{type:core.Injectable}],StripeService.ctorParameters=function(){return[{type:void 0,decorators:[{type:core.Inject,args:[STRIPE_PUBLISHABLE_KEY]}]},{type:void 0,decorators:[{type:core.Inject,args:[STRIPE_OPTIONS]}]},{type:LazyStripeAPILoader},{type:WindowRef}]},StripeService}(),StripeFactoryService=function(){function StripeFactoryService(baseKey,baseOptions,loader,window){this.baseKey=baseKey,this.baseOptions=baseOptions,this.loader=loader,this.window=window}return StripeFactoryService.prototype.create=function(key,options){return new StripeInstance(this.loader,this.window,key,options)},StripeFactoryService.decorators=[{type:core.Injectable}],StripeFactoryService.ctorParameters=function(){return[{type:void 0,decorators:[{type:core.Inject,args:[STRIPE_PUBLISHABLE_KEY]}]},{type:void 0,decorators:[{type:core.Inject,args:[STRIPE_OPTIONS]}]},{type:LazyStripeAPILoader},{type:WindowRef}]},StripeFactoryService}(),StripeCardComponent=function(){function StripeCardComponent(stripeService){this.stripeService=stripeService,this.card=new core.EventEmitter,this.on=new core.EventEmitter,this.options$=new BehaviorSubject.BehaviorSubject({}),this.elementsOptions$=new BehaviorSubject.BehaviorSubject({}),this.stripe$=new BehaviorSubject.BehaviorSubject(null)}return Object.defineProperty(StripeCardComponent.prototype,"options",{set:function(optionsIn){this.options$.next(optionsIn)},enumerable:!0,configurable:!0}),Object.defineProperty(StripeCardComponent.prototype,"elementsOptions",{set:function(optionsIn){this.elementsOptions$.next(optionsIn)},enumerable:!0,configurable:!0}),Object.defineProperty(StripeCardComponent.prototype,"stripe",{set:function(stripeIn){this.stripe$.next(stripeIn)},enumerable:!0,configurable:!0}),StripeCardComponent.prototype.ngOnInit=function(){var _this=this,elements$=Observable.Observable.combineLatest(this.elementsOptions$.asObservable(),this.stripe$.asObservable()).switchMap(function(_a){var options=_a[0],stripe=_a[1];return stripe?Object.keys(options).length>0?stripe.elements(options):stripe.elements():Object.keys(options).length>0?_this.stripeService.elements(options):_this.stripeService.elements()});Observable.Observable.combineLatest(elements$,this.options$.asObservable().filter(function(options){return Boolean(options)})).subscribe(function(_a){var elements=_a[0],options=_a[1];_this.element=elements.create("card",options),_this.element.on("blur",function(ev){return _this.on.emit({event:ev,type:"blur"})}),_this.element.on("change",function(ev){return _this.on.emit({event:ev,type:"change"})}),_this.element.on("click",function(ev){return _this.on.emit({event:ev,type:"click"})}),_this.element.on("focus",function(ev){return _this.on.emit({event:ev,type:"focus"})}),_this.element.on("ready",function(ev){return _this.on.emit({event:ev,type:"ready"})}),_this.element.mount(_this.stripeCard.nativeElement),_this.card.emit(_this.element)})},StripeCardComponent.prototype.getCard=function(){return this.element},StripeCardComponent.decorators=[{type:core.Component,args:[{selector:"ngx-stripe-card",template:'<div class="field" #stripeCard></div>'}]}],StripeCardComponent.ctorParameters=function(){return[{type:StripeService}]},StripeCardComponent.propDecorators={card:[{type:core.Output}],on:[{type:core.Output}],stripeCard:[{type:core.ViewChild,args:["stripeCard"]}],options:[{type:core.Input}],elementsOptions:[{type:core.Input}],stripe:[{type:core.Input}]},StripeCardComponent}(),NgxStripeModule=function(){function NgxStripeModule(){}return NgxStripeModule.forRoot=function(publishableKey,options){return{ngModule:NgxStripeModule,providers:[LazyStripeAPILoader,StripeService,StripeFactoryService,WindowRef,DocumentRef,{provide:STRIPE_PUBLISHABLE_KEY,useValue:publishableKey},{provide:STRIPE_OPTIONS,useValue:options}]}},NgxStripeModule.forChild=function(publishableKey,options){return{ngModule:NgxStripeModule,providers:[LazyStripeAPILoader,StripeService,StripeFactoryService,WindowRef,DocumentRef,{provide:STRIPE_PUBLISHABLE_KEY,useValue:publishableKey},{provide:STRIPE_OPTIONS,useValue:options}]}},NgxStripeModule.decorators=[{type:core.NgModule,args:[{declarations:[StripeCardComponent],exports:[StripeCardComponent]}]}],NgxStripeModule.ctorParameters=function(){return[]},NgxStripeModule}();exports.NgxStripeModule=NgxStripeModule,exports.StripeCardComponent=StripeCardComponent,exports.StripeService=StripeService,exports.StripeFactoryService=StripeFactoryService,exports.StripeInstance=StripeInstance,exports.LazyStripeAPILoader=LazyStripeAPILoader,exports.WindowRef=WindowRef,exports.DocumentRef=DocumentRef,exports.isSourceData=isSourceData,exports.STRIPE_PUBLISHABLE_KEY=STRIPE_PUBLISHABLE_KEY,exports.STRIPE_OPTIONS=STRIPE_OPTIONS,exports.isBankAccount=isBankAccount,exports.isBankAccountData=isBankAccountData,exports.isPii=isPii,exports.isPiiData=isPiiData,Object.defineProperty(exports,"__esModule",{value:!0})});