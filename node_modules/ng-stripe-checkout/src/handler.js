var StripeCheckoutHandler = /** @class */ (function () {
    /**
     * Constructor configures the Stripe Checkout handler with given config options.
     *
     * @param {IStripeCheckoutConfig} config
     */
    function StripeCheckoutHandler(config) {
        var _this = this;
        var tokenFn = config.token;
        config.token = function (token, args) {
            if (tokenFn != null) {
                tokenFn(token, args);
            }
            if (_this.resolveFn != null) {
                _this.resolveFn(token);
            }
        };
        this.stripeCheckout = StripeCheckout.configure(config);
    }
    /**
     * Open the Stripe Checkout window for this handler.
     *
     * @param {IStripeCheckoutOptions} options Options override initial config.
     * @returns {Promise<IStripeCheckoutToken>}
     */
    /**
       * Open the Stripe Checkout window for this handler.
       *
       * @param {IStripeCheckoutOptions} options Options override initial config.
       * @returns {Promise<IStripeCheckoutToken>}
       */
    StripeCheckoutHandler.prototype.open = /**
       * Open the Stripe Checkout window for this handler.
       *
       * @param {IStripeCheckoutOptions} options Options override initial config.
       * @returns {Promise<IStripeCheckoutToken>}
       */
    function (options) {
        var _this = this;
        var closedFn = options.closed;
        options.closed = function () {
            if (closedFn != null) {
                closedFn();
            }
            _this.rejectFn('stripe_closed');
        };
        var promise = new Promise(function (resolve, reject) {
            _this.resolveFn = resolve;
            _this.rejectFn = reject;
        });
        this.stripeCheckout.open(options);
        return promise;
    };
    /**
     * Close the currently open Stripe Checkout window if any.
     */
    /**
       * Close the currently open Stripe Checkout window if any.
       */
    StripeCheckoutHandler.prototype.close = /**
       * Close the currently open Stripe Checkout window if any.
       */
    function () {
        this.stripeCheckout.close();
    };
    return StripeCheckoutHandler;
}());
export { StripeCheckoutHandler };
//# sourceMappingURL=handler.js.map