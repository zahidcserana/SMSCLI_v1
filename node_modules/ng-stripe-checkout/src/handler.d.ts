import { IStripeCheckoutConfig, IStripeCheckoutOptions, IStripeCheckoutToken } from './config.model';
export declare class StripeCheckoutHandler {
    /**
     * Holds the Stripe Checkout instance.
     */
    private stripeCheckout;
    /**
     * Holds the current resolve function.
     *
     * @type {(token: IStripeCheckoutToken) => void}
     */
    private resolveFn;
    /**
     * Holds the current reject function.
     *
     * @type {(err: any) => void}
     */
    private rejectFn;
    /**
     * Constructor configures the Stripe Checkout handler with given config options.
     *
     * @param {IStripeCheckoutConfig} config
     */
    constructor(config: IStripeCheckoutConfig);
    /**
     * Open the Stripe Checkout window for this handler.
     *
     * @param {IStripeCheckoutOptions} options Options override initial config.
     * @returns {Promise<IStripeCheckoutToken>}
     */
    open(options: IStripeCheckoutOptions): Promise<IStripeCheckoutToken>;
    /**
     * Close the currently open Stripe Checkout window if any.
     */
    close(): void;
}
